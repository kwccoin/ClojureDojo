

--------------------------------------------------------------------------------
cljr is a Clojure REPL and package management system.

Usage: cljr command [arguments]

Available commands:

*  repl: Starts a Clojure repl.

*  swingrepl: Starts a Clojure swingrepl.

*  swank [port]: Start a local swank server on port 4005 (or as specified).

*  run filename: Runs the given Clojure file.

*  list: Prints a list of installed packages.

*  install package-name [package-version]: Installs the given package from 
   clojars.org, defaulting to the inferred latest version.

*  search term: Prints a list of packages on clojars.org with names that contain 
   the given search term.

*  describe package-name [package-version]: Prints the description of the given 
   package as found in the description field of its pom file.

*  versions package-name: Prints a list of the versions of the given package 
   available on clojars.org.

*  remove package-name: Removes given package from the cljr-repo package list, 
   must be followed by 'cljr clean' and 'cljr reload' to actually remove packages 
   from the repository.

*  clean: Removes all packages from $CLJR_HOME/lib directory.

*  reload: Reloads all packages in the cljr repository.

*  list-classpath: Prints classpath.

*  add-classpath dirs-or-jars: Adds directories or jar files to the classpath.
   Directories should have a trailing / to distinguish them from jar files.

*  add-jars jar file(s): Copies jar files to the cljr repository.
   Directories should have a trailing / to distinguish them from jar files.

*  remove-classpath dir-or-jar: Removes a directory or jar file from the classpath.
   Remember to include trailing / for directories.

*  list-repos: Prints a list of repositories.

*  add-repo repo-name repo-url: Adds repository.

*  remove-repo repo-name: Removes the given repository.

*  list-jars: Prints a list of jars in the cljr repository.

*  help: Prints this message.


Packages are installed in $CLJR_HOME/lib, and can be used by applications other 
than cljr by including the jars in that directory on the classpath. For instance, 
to start a command line REPL with jline, run the following command: 

   java -cp $CLJR_HOME/lib/'*' jline.ConsoleRunner clojure.main


java -jar .cljr/cljr.jar help
